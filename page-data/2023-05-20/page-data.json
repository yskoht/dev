{"componentChunkName":"component---src-templates-post-tsx","path":"/2023-05-20","result":{"data":{"markdownRemark":{"html":"<h1>misc: warp</h1>\n<p>iTerm2 + tmux を使っているけど遅いので warp を使ってみる</p>\n<h2>Settings</h2>\n<ul>\n<li>Appearance\n<ul>\n<li>Input\n<ul>\n<li>Input position\n<ul>\n<li>Start at the top</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Panes\n<ul>\n<li>Dim inactive panes\n<ul>\n<li>on</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Blocks\n<ul>\n<li>Compact mode\n<ul>\n<li>on</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Cursor\n<ul>\n<li>Blinking cursor\n<ul>\n<li>off</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2>Keyboard Shortcuts</h2>\n<ul>\n<li>tab\n<ul>\n<li>create\n<ul>\n<li>⌘ + T</li>\n</ul>\n</li>\n<li>move\n<ul>\n<li>shift + ⌘ + [ or ]</li>\n<li>⌘ + number</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>pane\n<ul>\n<li>vertical split\n<ul>\n<li>⌘ + D</li>\n</ul>\n</li>\n<li>horizontal split\n<ul>\n<li>shift + ⌘ + D</li>\n</ul>\n</li>\n<li>move\n<ul>\n<li>⌘ + [ or ]</li>\n</ul>\n</li>\n<li>resize\n<ul>\n<li>ctrl + ⌘ + arrow</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>block\n<ul>\n<li>select\n<ul>\n<li>⌘ + arrow</li>\n</ul>\n</li>\n<li>focus\n<ul>\n<li>⌘ + L</li>\n</ul>\n</li>\n<li>menu\n<ul>\n<li>⌘ + M</li>\n</ul>\n</li>\n<li>reinput\n<ul>\n<li>⌘ + I</li>\n</ul>\n</li>\n<li>scroll\n<ul>\n<li>pgup or pgdn</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>font size\n<ul>\n<li>⌘ + - or =</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h1>cgc: @yskoht/chat-gpt-cli</h1>\n<ul>\n<li><a href=\"https://github.com/yskoht/chat-gpt-cli\">yskoht/chat-gpt-cli: Command line tool for ChatGPT</a></li>\n</ul>\n<p>ChatGPT を端末から使うツールをゴールデンウィークのプロジェクトとして作っていたのがやっと終わった。\n以下にコミットログを見ながらメモを書いておく。</p>\n<ul>\n<li>フレームワークは <a href=\"https://github.com/vadimdemedes/ink\">ink</a> を使った。とても良かった</li>\n<li>複数行の入力に対応したかったので、MultiLineTextInput を作った。改行を Enter, サブミットをコマンド+Enter とかにしたかったけど、入力が取れなかった。\nink の useInput は backspace が del と判定されたり、meta が true にならなかったりするのであまり良くない。多分環境に依る</li>\n<li><a href=\"https://github.com/openai/openai-node\">openai/openai-node</a>はストリーミングに対応してない。\n<a href=\"https://github.com/openai/openai-node/issues/18#issuecomment-1369996933\">ワークアラウンド</a>が issue にある。</li>\n<li>Typescript で path alias を使うために <a href=\"https://github.com/justkey007/tsc-alias\">tsc-alias</a> を使ってみた。問題なかった</li>\n<li>ChatGPT からの改行は <code class=\"language-text\">\\r</code> で返ってくるようだった</li>\n<li>コードのハイライトをリアルタイムでするようにした。 コードブロックを正規表現で見つけて、\n<a href=\"https://github.com/felixfbecker/cli-highlight\">cli-highlight</a>に入れて置換しているだけ</li>\n<li>ink でスクロールできるコンポーネントは標準にはないが、以下の issue で解決されていたので自作した\n<ul>\n<li><a href=\"https://github.com/vadimdemedes/ink/issues/432\">Support `Box` overflow and scrolling · Issue #432 · vadimdemedes/ink</a></li>\n</ul>\n</li>\n<li>状態管理に <a href=\"https://github.com/pmndrs/zustand\">zustand</a> を使った。Persist middleware を自作できて、ファイルに状態を保存するのがキレイに書けた気がする</li>\n<li>URL を見つけてハイライトするようにした。まだバグがあるが取りきれてない</li>\n<li>ChatGPT からの返答に Markdown のテーブルがあったら ink でレンダリングするようにした。カラムの幅を調整するアルゴリズムを適当に書いた</li>\n<li>ロガーに <a href=\"https://github.com/trentm/node-bunyan\">node-bunyan</a> を使った</li>\n<li>ユーザーの入力履歴を保存するようにした。個人的には同じような質問を ChatGPT にすることが多い</li>\n<li>チャット履歴をファイルに保存した。パフォーマンスが気になる。ファイルの排他制御が必要かもだがまだしてない</li>\n<li>現在のチャット ID を状態として持っていて、その ID の内容を画面に表示するようにしている。\nプロンプトを打って、ChatGPT からの回答を待っている間に、ユーザーがメニューでチャット ID を変更すると、ChatGPT からの回答が他の ID に紐づいたりする。\nなので、ユーザーがサブミットしてから ChatGPT の回答が終わるまでの処理は ID が変化してはいけない。\nReact で書いているとリアクティブに ID が変化してしまったりする。\n結局 ID だけ持っていて、毎回 ID から紐づく値を取得するようにしたが、レンダリングの度に値を取得する必要があるのでパフォーマンスが悪い気がする\n<ul>\n<li>なので遅い端末だと画面がチラつく。iTerm2 + tmux だと遅くてダメそうだった</li>\n</ul>\n</li>\n<li>npm にアップロードするために package.json をいじった。pypi とか gem とかより簡単な気がする</li>\n<li>useInput が微妙で page up/page down/home/end が取得できない。\n代わりに <a href=\"https://github.com/TooTallNate/keypress\">TooTallNate/keypress</a> を使うように変更した</li>\n<li>コンフィグを変更できるようにだけした。UI はまだない</li>\n</ul>","fields":{"slug":"/2023-05-20"}}},"pageContext":{"slug":"/2023-05-20","prevSlug":"/2023-05-19","nextSlug":null}},"staticQueryHashes":["63159454"]}