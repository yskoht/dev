{"componentChunkName":"component---src-templates-post-tsx","path":"/2022-11-06","result":{"data":{"markdownRemark":{"html":"<h1>pmdr: webpack</h1>\n<p>Nestjs API サーバーの Dockerfile を作っていたらビルドできなかった。\nWebpack が <code class=\"language-text\">Module not found</code> を出していてなんのことかわからなかったが、\nそもそも <code class=\"language-text\">package.json</code> に package を追加し忘れていた。\n追加し忘れていてもローカルではビルドできてしまう。</p>\n<h1>pmdr: envsafe</h1>\n<p><a href=\"./2022-08-14.md\">2022-08-14</a>で環境変数を zod で検証できるようにしていた。\nで、ビルドしようとしたら環境変数が足りなくてビルドできない。\nビルド時に環境変数を埋め込んでしまうとコンテナイメージが流出すると環境変数も流出してしまうので、\n実行時に指定できるようにしたい。</p>\n<p>ちょっと前に同じようなことをやっている記事を見たなと思って改めて見直した。\nこの記事もビルド時に環境変数を検証している。</p>\n<ul>\n<li><a href=\"https://zenn.dev/okumura_daiki/articles/6d3632c6885ed6\">Next.js で環境変数を検証して型安全に扱う</a></li>\n</ul>\n<p>この記事のコメント欄で <code class=\"language-text\">envsafe</code> を知った。\nこれは別に Next.js 専用という感じではないっぽく良いかもしれない。</p>\n<ul>\n<li><a href=\"https://github.com/KATT/envsafe\">KATT/envsafe: 🔒 Makes sure you don't accidentally deploy apps with missing or invalid environment variables.</a></li>\n</ul>\n<p>Next.js のアプリ内で API コールを MSW でモックするかしないかを環境変数で切り替えていて、\nこの環境変数は本番環境で有効にしたくない、という感じで、本番環境で <code class=\"language-text\">undefined</code>であること、\nローカル環境では <code class=\"language-text\">boolean | undefined</code> みたいな検証がしたい。\n環境ごとに <code class=\"language-text\">envsafe</code> を呼び出せば良いような気もするが、もうちょっとスッキリ書きたい。</p>\n<p>もしくは使う側で <code class=\"language-text\">モックが有効かつローカル環境であるときに</code> と条件をつけて使うほうが良いのかもしれない。</p>\n<h1>pmdr: Runtime Configuration</h1>\n<ul>\n<li><a href=\"https://nextjs.org/docs/api-reference/next.config.js/runtime-configuration\">next.config.js: Runtime Configuration | Next.js</a></li>\n</ul>","fields":{"slug":"/2022-11-06"}}},"pageContext":{"slug":"/2022-11-06","prevSlug":"/2022-11-02","nextSlug":null}},"staticQueryHashes":["63159454"]}